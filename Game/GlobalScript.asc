// main global script file
bool correr = false;
// called when the game starts, before the first room is loaded
function game_start()
{
  Game.NormalFont = eFontFont4;
  Game.SpeechFont = eFontFont4;
}

// called on every game cycle, except when the game is blocked
function repeatedly_execute()
{
  if (inventario.Visible && mouse.y > inventario.Height) {
    mouse.Mode = eModeUseinv;
  }
}

// called on every game cycle, even when the game is blocked
function repeatedly_execute_always()
{
}

function activarInventario(){
  if(cJuli.ActiveInventory == iPistola){
    iPistola.RunInteraction(eModeInteract);
  } else if(cJuli.ActiveInventory == iColonia){
    iColonia.RunInteraction(eModeInteract);
  } else if(cJuli.ActiveInventory == iGemaR){
    iGemaR.RunInteraction(eModeInteract);
  } else if(cJuli.ActiveInventory == iGema2){
    iGema2.RunInteraction(eModeInteract);
  }
}


function comenzar(){
  cJuli.ChangeRoom(1, 1000, 1000, eDirectionUp);
  for(int j = 1; j<=6; j++){
    ResetRoom(j);
  }
  cJuli.LoseInventory(iPistola);
  cJuli.LoseInventory(iGemaR);
  cJuli.LoseInventory(iGema2);
  cJuli.LoseInventory(iColonia);
  //Faltaría algún otro objeto que el jugador pueda mantener hasta la última sala, como la nota con las normas generales
}

function paso(int id1,  int id2){ //Guarda los valores de los id (de la función interact) para poder actualizar a tiempo real los sprites de la conversación (en la función talk).
  p1 = id1;
  p2 = id2;
}

function talk(String pito,  bool change)
{
  gui[p1].Visible = true;
  gui[p2].Visible = true;
  if(!change){
    gui[p1].Transparency = 0;
    gui[p2].Transparency = 50;
  }else if (change){
    gui[p1].Transparency = 50;
    gui[p2].Transparency = 0;
  }
  //AudioClip* voz
  //vozOld.Stop();
  //voz.Play(eAudioPriorityHigh);
  //vozOld = voz;
  DisplayAt(50,  1100,  1820,  pito);
  //Toda conversación empieza con false. Debemos cambiar el valor del booleano cada vez que hable la otra persona.
}

function hablar(int id1, int id2, int x,  int y){ 
  inter = false;
  if(IsKeyPressed(eKeyE)){
    inter = true;
    cJuli.Walk(x, y,  eBlock,  eWalkableAreas);
    //Hacer que el fondo se oscurezca
    //HAY QUE TENER CUIDADO: cada conversación debe tener los ID del character y la gui coincidentes.
    paso(id1,  id2);
  }
  return inter;
}



function endHablar(){
  gui[p1].Visible = false;
  gui[p2].Visible = false;
  //AudioClip* voz
  //vozOld.Stop();
}

function interact(int x,  int y, String texto,  Character* personaje){
  inter=false;
  if(IsKeyPressed(eKeyE)){
    inter = true;
    cJuli.Walk(x, y, eBlock, eWalkableAreas);
    cJuli.FaceCharacter(personaje);
    DisplayAtY(20, texto);
  }
  return inter;
}



// called when a key is pressed
function on_key_press(eKeyCode keycode)
{
  if (IsGamePaused())
  {
    // game paused, so don't react to any keypresses
    keycode = 0;
  }
  else if (keycode == eKeyCtrlQ)
  {
    // Ctrl-Q will quit the game
    QuitGame(1);
  }
  else if (keycode == eKeyF9)
  {
    // F9 will restart the game
    RestartGame();
  }
  else if (keycode == eKeyF12)
  {
    // F12 will save a screenshot to the save game folder
    SaveScreenShot("screenshot.pcx");
  }
  else if (keycode == eKeyCtrlS)
  {
    // Ctrl-S will give the player all defined inventory items
    Debug(0, 0);
  }
  else if (keycode == eKeyCtrlV)
  {
    // Ctrl-V will show game engine version and build date
    Debug(1, 0);
  }
  else if (keycode == eKeyCtrlA)
  {
    // Ctrl-A will show walkable areas
    Debug(2, 0);
  }
  else if (keycode == eKeyCtrlX)
  {
    // Ctrl-X will let the player teleport to any room
    Debug(3, 0);
  }
  
  //Main character movement:
  int x = cJuli.x;
  int y = cJuli.y;
  
  if(keycode == eKeyW)
  {
    if(!correr)
    {
      y -= 20;
    } 
    else{
      y -= 40;
    }
  } 
  
  else if(keycode == eKeyS)
  {
    if(!correr)
    {
      y += 20;
    } 
    else{
      y += 40;
    }
  } 
  
  else if(keycode == eKeyA)
  {
    if(!correr)
    {
      x -= 20;
    } 
    else{
      x -= 40;
    }
  } 
  
  else if(keycode == eKeyD)
  {
    if(!correr)
    {
      x += 20;
    } 
    else{
      x += 40;
    }
  }
  
  cJuli.Walk(x, y, eBlock, eWalkableAreas);
  
  if(keycode == eKeyF)
  {
    if(!correr)
    {
      cJuli.SetWalkSpeed(25, 25);
      correr = true;
    }
    else if(correr)
    {
      cJuli.SetWalkSpeed(10, 10);
      correr = false;
    }
  }
  if(keycode == eKeyEscape){
    if(!IsGamePaused()){
      mouse.Visible = true;
      //PauseGame();
      //gGui1.Visible = true;
    }
  }
}


// called when a mouse button is clicked
function on_mouse_click(MouseButton button)
{
  if (IsGamePaused())
  {
    // game is paused, so do nothing (i.e. don't process mouse clicks)
  }
  else if (button == eMouseLeft)
  {
    // left-click, so try using the current mouse cursor mode at this position
    Room.ProcessClick(mouse.x, mouse.y, mouse.Mode);
  }
  else if (button == eMouseRight)
  {
    // right-click, so cycle the mouse cursor mode
    mouse.SelectNextMode();
  }
}



function dialog_request(int param) {
}
function Button1_OnClick(GUIControl *control, MouseButton button)
{
  
}

//PUERTA 1

function preguntas3(){
  talk("¿De qué iba el tercer texto?", true);
  gBotones3.Visible = true;
}

function preguntas2(){
  talk("¿De qué iba el segundo texto?", true);
  gBotones2.Visible = true;
}

function preguntas1(){
  talk("De acuerdo. Comencemos con las preguntas:\n¿De qué iba el primer texto?", true);
  gBotones1.Visible = true;
  detener = true;
}

function objeto(){
  if(perder1){
    talk("Dentro del florero que está al lado de la puerta está tu premio por haber superado la prueba. Recógelo y dirígete a la siguiente sala.", true);
  }else{
    talk("En el el cajón de la mesa del florero hay un compartimento secreto. En él está tu premio por haber terminado el desafío.", true);
  }
  endHablar();
  cJuli.LoseInventory(iLupa);
  detener = false;
}

function b11_OnClick(GUIControl *control, MouseButton button)
{
  perder1 = true;
  gBotones1.Visible = false;
  preguntas2();
}


function b12_OnClick(GUIControl *control, MouseButton button)
{
  gBotones1.Visible = false;
  preguntas2();
}

function b13_OnClick(GUIControl *control, MouseButton button)
{
  perder1 = true;
  gBotones1.Visible = false;
  preguntas2();
}

function b21_OnClick(GUIControl *control, MouseButton button)
{
  perder1 = true;
  gBotones2.Visible = false;
  preguntas3();
}

function b22_OnClick(GUIControl *control, MouseButton button)
{
  perder1 = true;
  gBotones2.Visible = false;
  preguntas3();
}

function b23_OnClick(GUIControl *control, MouseButton button)
{
  gBotones2.Visible = false;
  preguntas3();
}

function b31_OnClick(GUIControl *control, MouseButton button)
{
  gBotones3.Visible = false;
  objeto();
}

function b32_OnClick(GUIControl *control, MouseButton button)
{
  perder1 = true;
  gBotones3.Visible = false;
  objeto();
}

function b33_OnClick(GUIControl *control, MouseButton button)
{
  perder1 = true;
  gBotones3.Visible = false;
  objeto();
}



//PUERTA 3
function iLinterna_UseInv()
{
  if (cJuli.ActiveInventory == iDestornillador) {
  cJuli.LoseInventory(iDestornillador);
  cJuli.LoseInventory(iLinterna);
  cJuli.AddInventory(iLintDes);
  }
}

function iLintDes_UseInv()
{
  if (!lint) {
    if (cJuli.ActiveInventory == iPilas) {
      cJuli.LoseInventory(iPilas);
    }
    if (cJuli.ActiveInventory == iLente) {
      cJuli.LoseInventory(iLente);
    }
    lint = true;
  }
  else{
    if (cJuli.ActiveInventory == iPilas) {
      cJuli.LoseInventory(iLintDes);
      cJuli.LoseInventory(iPilas);
      cJuli.AddInventory(iLintNew);
    }
    if (cJuli.ActiveInventory == iLente) {
      cJuli.LoseInventory(iLintDes);
      cJuli.LoseInventory(iLente);
      cJuli.AddInventory(iLintNew);
    }
    zoom = true;
    DisplayAtY(20, "Vamos a ver qué descubro con esta linterna. Está bastante guapa. Probablemente me la robe si consigo salir de aquí con vida.");
  }
}

function Button3_OnClick(GUIControl *control, MouseButton button)
{
  gui[4].Visible = false;
  DisplayAtY(20, "Definitivamente, este fue el asesino.");
  culpable = false;
  zoom = false;
  dead = false;
  gui[1].Visible = true;
  paso(2, 1);
  talk("De acuerdo. Prueba finalizada. Encontrarás tu recompensa bajo la mesa de mezclas, en un compartimento oculto.", false);
  endHablar();
  endisc = true;
}

function Button4_OnClick(GUIControl *control, MouseButton button)
{
  gui[4].Visible = false;
  DisplayAtY(20, "Definitivamente, este fue el asesino.");
  culpable = true;
  zoom = false;
  dead = false;
  gui[1].Visible = true;
  paso(2, 1);
  talk("De acuerdo. Prueba finalizada. Encontrarás tu recompensa bajo la mesa de mezclas, en un compartimento oculto.", false);
  endHablar();
  endisc = true;
}

function Button5_OnClick(GUIControl *control, MouseButton button)
{
  gui[5].Visible = false;
  DisplayAtY(20, "Definitivamente, este fue el asesino.");
  culpable = false;
  zoom = false;
  dead = false;
  gui[1].Visible = true;
  paso(2, 1);
  talk("De acuerdo. Prueba finalizada. Encontrarás tu recompensa bajo la mesa de mezclas, en un compartimento oculto.", false);
  endHablar();
  endisc = true;
}

function Button6_OnClick(GUIControl *control, MouseButton button)
{
  gui[5].Visible = false;
  DisplayAtY(20, "Definitivamente, este fue el asesino.");
  culpable = false;
  zoom = false;
  dead = false;
  gui[1].Visible = true;
  paso(2, 1);
  talk("De acuerdo. Prueba finalizada. Encontrarás tu recompensa bajo la mesa de mezclas, en un compartimento oculto.", false);
  endHablar();
  endisc = true;
}

function Button7_OnClick(GUIControl *control, MouseButton button)
{
  gui[5].Visible = false;
  DisplayAtY(20, "Definitivamente, este fue el asesino.");
  culpable = false;
  zoom = false;
  dead = false;
  gui[1].Visible = true;
  paso(2, 1);
  talk("De acuerdo. Prueba finalizada. Encontrarás tu recompensa bajo la mesa de mezclas, en un compartimento oculto.", false);
  endHablar();
  endisc = true;
}

//SALA FINAL
function bd1_OnClick(GUIControl *control, MouseButton button)
{
  gDialog.Visible = false;
  talk("¿POR MI CULPA? ¿TENGO QUE RECORDAR QUIÉNES ME HAN TRAÍDO AQUÍ CONTRA MI VOLUNTAD?", true);
  talk("Pero qué niño más maleducado. Lo mismo te tengo que partir las piernas para que te calles la boca.", false);
  endHablar();
  //Game Over
}

function bd2_OnClick(GUIControl *control, MouseButton button)
{
  gDialog.Visible = false;
  talk("Espero que ese partido tan importante del que hablas fuera el Madrid - Betis.", true);
  talk("Por su puesto que es el Real Madrid - Betis. ¡Hala Madrid!", false);
  talk("¡VIVA EL BETI MANQUE PIERDA!",true);
  endHablar();
  cJuli.Say("...");
  cGuardia.Say("...");
  paso(1, 0);
  talk("Creo que tengo que utilizar los objetos que me han dado al superar las pruebas. ¿Cómo lo hago?",false);
  endHablar();
}

function iPistola_Interact()
{
  if(final){
    gDecisionP.Visible = true;
  } else{
    talk("Me reservo las balas para más tarde... Puede que las necesite", false);
    endHablar();
  }
}

function iColonia_Interact()
{
  if(final){
    gDecisionC.Visible = true;
  }else{
    talk("¿Para qué me dan una colonia? ¿Es una indirecta? Quizá debería dejar de jugar al LOL...", false);
    endHablar();
  }
}

function iGemaR_Interact()
{
  if(final){
    gDecisionG.Visible = true;
  } else{
    talk("Cuando la venda pienso hacerme socio vitalicio del Betis", false);
    endHablar();
  }
}

function iGema2_Interact()
{
  if(final){
    paso(1, 3);
    talk("Si me dejas escapar te daré esta gema.", false);
    talk("¡JAJAJAJAJA! Qué imbécil. Esas gemas son falsas, te las dan al perder las pruebas para que te pienses que no eres tan inútil como de verdad eres.", true);
    intentos--;
    if(intentos>0){
      talk("Te queda un intento menos. Venga, de vuelta al recibidor, a ver si esta vez lo haces bien", true);
      endHablar();
      comenzar();
    } else{
      talk("No te quedan más intentos Es una pena, pero he de matarte.", false);
      endHablar();
      //Game Over
    }
  }else{
    paso(1, 0);
    talk("Según venda esta gema me voy a emancipar.", false);
    endHablar();
  }
}

function bPistola1_OnClick(GUIControl *control, MouseButton button)
{
  gDecisionP.Visible = false;
  paso(1, 3);
  talk("Prepárate para morir, mi amor", false);
  talk("Se nota que nunca has visto una pistola de cerca. Esa pistola que estás sujetando es más falsa que mi ex. ¿Sabes qué pistola es de verdad? La mía.", false);
  endHablar();
  //Game Over
}

function bPistola2_OnClick(GUIControl *control,  MouseButton button)
{
  gDecisionP.Visible = false;
  paso(1, 3);
  talk("No quiero hacerte daño. Me dieron esta pistola, pero no la quiero utilizar.", false);
  talk("Haces bien. De todos modos era falsa", true);
  endHablar();
  tirada = true;
  cJuli.LoseInventory(iPistola);
}

function bColonia1_OnClick(GUIControl *control,  MouseButton button)
{
  gDecisionC.Visible = false;
  paso(1, 0);
  talk("Perfecto, ahora huelo divinamente", false);
  endHablar();
  echada = true;
  cJuli.LoseInventory(iColonia);
}

function bColonia2_OnClick(GUIControl *control,  MouseButton button)
{
  gDecisionC.Visible = false;
  paso(3, 1);
  talk("¡SERÁS SOPLAPOLLAS! ¡DIOS, QUÉ DOLOR! ¡Te voy a matar, niñato!", false);
  endHablar();
  //Game Over
}

function bGema1_OnClick(GUIControl *control,  MouseButton button)
{
  gDecisionG.Visible = false;
  paso(1, 3);
  talk("Te doy esta gema a cambio de que me dejes salir.", false);
  talk("No te creas que tiene mucho valor. Ganaríamos más si pedimos dinero a tus padres por el rescate.", true);
  talk("Una lástima que no vayan a pagar porque son ellos los que te han traído aquí. De todos modos, soy un profesional, así que no me podrás sobornar tan fácilmente.", true);
  intentos--;
  if(intentos>0){
    talk("Te queda un intento menos. Venga, de vuelta al recibidor, a ver si esta vez lo haces bien", true);
    endHablar();
    comenzar();
  }else{
    talk("No te quedan más intentos Es una pena, pero he de matarte.", true);
    endHablar();
    //Game Over
  }
}

function bGema2_OnClick(GUIControl *control,  MouseButton button)
{
  gDecisionG.Visible = false;
  paso(1, 3);
  talk("Esta gema es hermosa, pero más hermoso eres tú. ¡Ven aquí y abrázame!", false);
  if(tirada && echada){
    talk("Es lo más bonito que han hecho por mí en mucho tiempo. ¡Vayamos juntos a ver el final del Madrid - Betis!", true);
    endHablar();
    cGuardia.Walk(1516, 1584, eBlock, eWalkableAreas);
    cJuli.FollowCharacter(cGuardia);
    //Créditos
  }else if(!echada){
    talk("Eh Preferiría no abrazarte. Hueles a escroto, niño.", true);
    endHablar();
  }else if(echada && !tirada){
    talk("Sé que tienes una pistola. No voy a abrazarte mientras la tengas en tu poder.", true);
    if(perder1){
      talk("¿Qué pistola?", false);
      talk("Espera ¿Tienes una gema verde?", true);
      talk("Sí. Pienso venderla cuando salga de aquí.", false);
      talk("¡JAJAJAJAJA! Lo siento, chico, pero esa gema verde es falsa. Te las dan cuando pierdes uno de los desafíos para que pienses que eres menos inútil de lo que en realidad eres.", true);
      intentos--;
      if(intentos>0){
        talk("Te queda un intento menos. Venga, de vuelta al recibidor, a ver si esta vez lo haces bien", true);
        endHablar();
        comenzar();
      }else{
        talk("No te quedan más intentos Es una pena, pero he de matarte.", true);
        endHablar();
        //Game Over
      }
    } else{
      endHablar();
    }
  }
}

