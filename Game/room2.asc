// room script file

// room script file
import function talk(String pito,  bool change);
import function paso(int id1,  int id2);
import function endHablar();
import function interact(int x,  int y, String texto,  Character* personaje);
import function hablar(int id1,  int id2,  int x,  int y);
import function preguntas1();



function room_FirstLoad()
{

  hHotspot20.Enabled = false;
  hHotspot1.Enabled = false;
  gui[2].Visible = true;
  gui[1].Visible = true;
  paso(2, 1);
  talk("Hay doce carteles repartidos por la sala. En ellos hay escritos tres textos, cada uno repartido en cuatro carteles distintos.", false);
  talk("En el centro de la sala cuentas con tres carteles extra que te proporcionarán la información necesaria para completar cada acertijo.", false);
  talk("En la mesa central hay un papel con pistas generales y un timbre que deberás pulsar para comunicar tu respuesta definitiva. Las reglas son las siguientes:", false);
  talk("No pises nada que sea rojo\nAcierta la pregunta correspondiente a cada texto. Un solo fallo significará la derrota\nNo hagas el más mínimo ruido hasta el momento de responder", false);
  talk("La experiencia me dice que esta es la prueba más difícil, así que déjame darte un consejo: presta mucha atención a la orientación, tanto a la tuya como a la de los elementos de la habitación.", false);
  gui[2].Visible = false;
  gui[1].Visible = false;
}

function room_Load()
{
  aGeneral.Play();

}

function hHotspot1_WalkOn()
{
  cJuli.ChangeRoom(1, 1000,  1300);
  cJuli.LoseInventory(iDestornillador);
  cJuli.LoseInventory(iLupa);
}


function hHotspot2_WalkOn()
{
  if(!superado1){
    if(interact(792, 936, "Estoy harto.\nSé que no soy\nun héroe, y que\nnunca lo seré.",cCartelSI)){
    }
  } else{
    if(IsKeyPressed(eKeyE)){
      cJuli.Walk(792, 924, eBlock, eWalkableAreas);
      cJuli.FaceDirection(eDirectionUp);
      paso(1, 0); //Hay que hacer una gui vacía para cuando Julián hable solo
      if(perder1){
        puzzle1=true;
        cJuli.AddInventory(iGema2);
        talk("Anda, ¡Qué gema más bonita! Seguro que significa que lo he hecho bien. Mi intelecto no tiene rival, desde luego.", false);
      } else{
        puzzle1=true;
        cJuli.AddInventory(iPistola);
        talk("¿Por qué le darían a un niño una pistola? No estamos en Estados Unidos. No sé si será de verdad, pero, por si acaso, me la guardo para más adelante.", false);
        talk("Si me encuentro con ese maldito secuestrador lo voy a dejar to’ moñeco tirado en el suelo de tres disparos en la nuca.", false);
      }
      talk("No parece que tenga nada más que hacer en esta habitación. Iré a la siguiente.", false);
      endHablar();
      hHotspot1.Enabled = true;
    }
  }
}

function hHotspot3_WalkOn()
{
  if(interact(1260, 926, "Si la vida fuera\nun videojuego,\n¿Quién sería el\nprotagonista?",cCartelSD)){
  }
}


function hHotspot4_WalkOn()
{
  if(interact(552, 916, "te quedara poco\n¿Por qué no lo\nmuertos en vida y\ntiempo aquí",cCartelESI)){
  }
}



function hHotspot5_WalkOn()
{
  if(interact(1514, 928, "Y tú...\nHarías todo lo\nEs como si\nAyudadme.",cCartelESD)){
  }
}



function hHotspot6_WalkOn()
{
  if(interact(452, 1064, "Hasta mi muerte\nel status quo\nquiero mantener\nsólo sé que.",cCartelIS)){
  }
}



function hHotspot7_WalkOn()
{
  if(interact(398, 1188, "Nada cambiara\nnunca quise que\n¿O impermanencia\npermanencia?",cCartelIzI)){
  }
}



function hHotspot8_WalkOn()
{
  if(interact(362, 1408, "¿Qué harías si\nque te gusta.\nestuviéramos\nllevo ya tanto",cCartelEII)){
  }
}



function hHotspot9_WalkOn()
{
  if(interact(796, 1414, "¿Por qué \nparezco un NPC?\nEs siempre\nla misma rutina.",cCartelIIz)){
  }
}



function hHotspot10_WalkOn()
{
  if(interact(1252, 1414, "Tengo claro que\nel protagonista\nde mi vida soy\nyo, pero...",cCartelID)){
  }
}



function hHotspot11_WalkOn()
{
  if(interact(1704, 1408, "tiempo de vida?\nhaces ahora?\nvivos en muerte.\nque quema.",cCartelEID)){
  }
}


function hHotspot12_WalkOn()
{
  if(interact(1622, 1200, "Quiero volver.\natrás, tampoco\nsi miro hacia,\nsin embargo.",cCartelDI)){
  }
}




function hHotspot13_WalkOn()
{
  if(interact(1600, 1050, "El cambio\nnecesario\nsi es realmente\ntampoco sé.",cCartelDS)){
  }
}



function hHotspot14_WalkOn()
{
  if(interact(969, 1060, "Pista para la agrupación de los cuadros por grupos de cuatro:\nAquellos que se quieren se buscan. Viven su vida hombro con hombro y no tienen miedo de mirarse a la cara.",cNota)){
  }
}



function hHotspot15_WalkOn()
{
  if(interact(806, 1162, "Texto #3:\nEnfrentados cara a cara\nEn la lejanía\nLo que a tu izquierda comienza\nA tu derecha termina\nSigue tu camino lineal\nTu trayectoria de la vida\nCuando todo se vuelva repetitivo\nDesvíate de la rutina\nPista: para poder descifrarlo se ha de leer cada uno de los cuatro carteles en más de una ocasión, aunque nunca su contenido completo.",cCartel3)){
  }
}



function hHotspot16_WalkOn()
{
  if(interact(1060, 1272, "Texto #1:\nComienza por la primera\nSigue el orden lógico\nAvanza hasta la décima\nComo un compás cronológicon\nPista: primera y décima no hacen referencia a posiciones, sino al ''compás cronológico.''",cCartel1)){
  }
}

function hHotspot17_WalkOn()
{
  if(interact(1250, 1150, "Texto #2:\nAnaliza lo ya vivido\nRepítelo en reverso\nPara que todo tenga sentido\nAplica lo mismo al verso\nPista: ''lo ya vivido'' tiene relación con la segunda regla general.",cCartel2)){
  }
}

function hHotspot18_WalkOn()
{
  if(hablar(1, 0, 620, 1334)){
    cJuli.FaceDirection(eDirectionDown);
    talk("Un destornillador... Si está aquí será por algo, así que me lo robo", false);
    endHablar();
    cJuli.AddInventory(iDestornillador);
    destornillador = true;
    hHotspot18.Enabled = false;
  }
}


function hHotspot19_WalkOn()
{
  if(hablar(1, 2, 1124,1024)){
    cJuli.FaceDirection(eDirectionDown);
    if(destornillador == true){
      paso(1, 0);
      talk("El secuestrador dijo que tenía que pulsar el timbre, no hacerlo sonar. Si lo desarmo con el destornillador, en teoría, no habré hecho ningún ruido.", false);
      endHablar();
      cJuli.Say("...");
      cJuli.LoseInventory(iDestornillador);
    }else if(!destornillador){
      //aTimbre.Play();
      perder1 = true;
    }
    for(int i = 3; i<=19; i++){
      hotspot[i].Enabled = false;
    }
    hHotspot21.Enabled = false;
    hHotspot20.Enabled = true;
    paso(1, 2);
    talk("Ya descifré el mensaje.", false);
    mouse.Visible = true;
    superado1 = true;
    preguntas1();
  }
}


function hHotspot21_WalkOn()
{
  if(hablar(1, 0, 1446, 1340)){
    cJuli.FaceDirection(eDirectionDown);
    talk("¡Una lupa! De pequeño jugaba con una de estas a quemar niños y demás insectos con la luz del sol. Me vendrá bien si quiero quemar algo... O ver algo de lejos.", false);
    endHablar();
    cJuli.AddInventory(iLupa);
    lupa = true;
    hHotspot21.Enabled = false;
  }
}

function hHotspot22_WalkOn()
{
  perder1 = true;
  hHotspot22.Enabled = false;
}



function hHotspot24_WalkOn()
{
  if(hablar(1, 0, 614, 1060)){
    cJuli.FaceDirection(eDirectionLeft);
    if(!lupa){
      talk("Está demasiado lejos como para leerlo. Necesito encontrar la forma de hacerlo sin pisar el suelo rojo.", false);
      endHablar();
    }else{
      DisplayAtY(20, "Hasta mi muerte\nel status quo\nquiero mantener\nsólo sé que.");
    }
  }
}

function hHotspot25_WalkOn()
{
  if(hablar(1, 0, 572, 1184)){
    cJuli.FaceDirection(eDirectionLeft);
    if(!lupa){
      talk("Está demasiado lejos como para leerlo. Necesito encontrar la forma de hacerlo sin pisar el suelo rojo.", false);
      endHablar();
    }else{
      DisplayAtY(20, "Nada cambiara\nnunca quise que\n¿O impermanencia\npermanencia?");
    }
  }
}



function hHotspot26_WalkOn()
{
  if(hablar(1, 0, 1436, 1072)){
    cJuli.FaceDirection(eDirectionRight);
    if(!lupa){
      talk("Está demasiado lejos como para leerlo. Necesito encontrar la forma de hacerlo sin pisar el suelo rojo.", false);
      endHablar();
    }else{
      DisplayAtY(20, "El cambio\nnecesario\nsi es realmente\ntampoco sé.");
    }
  }
}


function hHotspot27_WalkOn()
{
  if(hablar(1, 0, 1488, 1212)){
    cJuli.FaceDirection(eDirectionRight);
    if(!lupa){
      talk("Está demasiado lejos como para leerlo. Necesito encontrar la forma de hacerlo sin pisar el suelo rojo.", false);
      endHablar();
    }else{
      DisplayAtY(20, "Quiero volver.\natrás, tampoco\nsi miro hacia,\nsin embargo.");
    }
  }
}






function room_Leave()
{
  aGeneral.Stop();

}


