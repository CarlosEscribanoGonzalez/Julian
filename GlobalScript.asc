// main global script file
bool correr = false;
// called when the game starts, before the first room is loaded
function game_start()
{
  Game.NormalFont = eFontFont1;
  Game.SpeechFont = eFontFont1;
}

// called on every game cycle, except when the game is blocked
function repeatedly_execute()
{
  if (inventario.Visible && mouse.y > inventario.Height) {
    mouse.Mode = eModeUseinv;
  }
}

// called on every game cycle, even when the game is blocked
function repeatedly_execute_always()
{
}

function paso(int id1,  int id2){ //Guarda los valores de los id (de la función interact) para poder actualizar a tiempo real los sprites de la conversación (en la función talk).
  p1 = id1;
  p2 = id2;
}

function talk(String pito,  bool change)
{
  if(!change){
    gui[p1].Transparency = 0;
    gui[p2].Transparency = 50;
  }else if (change){
    gui[p1].Transparency = 50;
    gui[p2].Transparency = 0;
  }
  //AudioClip* voz
  //vozOld.Stop();
  //voz.Play(eAudioPriorityHigh);
  //vozOld = voz;
  DisplayAt(50,  1100,  1820,  pito);
  //Toda conversación empieza con false. Debemos cambiar el valor del booleano cada vez que hable la otra persona.
}

function hablar(int id1, int id2, int x,  int y){ 
  inter = false;
  if(IsKeyPressed(eKeyE)){
    inter = true;
    cJuli.Walk(x, y,  eBlock,  eWalkableAreas);
    gui[id1].Visible = true;
    gui[id2].Visible = true;
    //Hacer que el fondo se oscurezca
    //HAY QUE TENER CUIDADO: cada conversación debe tener los ID del character y la gui coincidentes.
    paso(id1,  id2);
  }
  return inter;
}


function endHablar(int id1, int id2){
  gui[id1].Visible = false;
  gui[id2].Visible = false;
  //AudioClip* voz
  //vozOld.Stop();
}

function interact(int x,  int y, String texto,  Character* personaje){
  inter=false;
  if(IsKeyPressed(eKeyQ)){
    inter = true;
    cJuli.Walk(x, y, eBlock, eWalkableAreas);
    cJuli.FaceCharacter(personaje);
    DisplayAtY(20, texto);
  }
  return inter;
}



// called when a key is pressed
function on_key_press(eKeyCode keycode)
{
  if (IsGamePaused())
  {
    // game paused, so don't react to any keypresses
    keycode = 0;
  }
  else if (keycode == eKeyCtrlQ)
  {
    // Ctrl-Q will quit the game
    QuitGame(1);
  }
  else if (keycode == eKeyF9)
  {
    // F9 will restart the game
    RestartGame();
  }
  else if (keycode == eKeyF12)
  {
    // F12 will save a screenshot to the save game folder
    SaveScreenShot("screenshot.pcx");
  }
  else if (keycode == eKeyCtrlS)
  {
    // Ctrl-S will give the player all defined inventory items
    Debug(0, 0);
  }
  else if (keycode == eKeyCtrlV)
  {
    // Ctrl-V will show game engine version and build date
    Debug(1, 0);
  }
  else if (keycode == eKeyCtrlA)
  {
    // Ctrl-A will show walkable areas
    Debug(2, 0);
  }
  else if (keycode == eKeyCtrlX)
  {
    // Ctrl-X will let the player teleport to any room
    Debug(3, 0);
  }
  
  //Main character movement:
  int x = cJuli.x;
  int y = cJuli.y;
  
  if(keycode == eKeyW)
  {
    if(!correr)
    {
      y -= 20;
    } 
    else{
      y -= 40;
    }
  } 
  
  else if(keycode == eKeyS)
  {
    if(!correr)
    {
      y += 20;
    } 
    else{
      y += 40;
    }
  } 
  
  else if(keycode == eKeyA)
  {
    if(!correr)
    {
      x -= 20;
    } 
    else{
      x -= 40;
    }
  } 
  
  else if(keycode == eKeyD)
  {
    if(!correr)
    {
      x += 20;
    } 
    else{
      x += 40;
    }
  }
  
  cJuli.Walk(x, y, eBlock, eWalkableAreas);
  
  if(keycode == eKeyF)
  {
    if(!correr)
    {
      cJuli.SetWalkSpeed(50, 50);
      correr = true;
    }
    else if(correr)
    {
      cJuli.SetWalkSpeed(10, 10);
      correr = false;
    }
  }
  if(keycode == eKeyEscape){
    if(!IsGamePaused()){
      mouse.Visible = true;
      PauseGame();
      //gGui1.Visible = true;
    }
  }
}


// called when a mouse button is clicked
function on_mouse_click(MouseButton button)
{
  if (IsGamePaused())
  {
    // game is paused, so do nothing (i.e. don't process mouse clicks)
  }
  else if (button == eMouseLeft)
  {
    // left-click, so try using the current mouse cursor mode at this position
    Room.ProcessClick(mouse.x, mouse.y, mouse.Mode);
  }
  else if (button == eMouseRight)
  {
    // right-click, so cycle the mouse cursor mode
    mouse.SelectNextMode();
  }
}



function dialog_request(int param) {
}
function Button1_OnClick(GUIControl *control, MouseButton button)
{

}


//PUERTA 3
function iLinterna_UseInv()
{
  if (cJuli.ActiveInventory == iDestornillador) {
  cJuli.LoseInventory(iDestornillador);
  cJuli.LoseInventory(iLinterna);
  cJuli.AddInventory(iLintDes);
  }
}

function iLintDes_UseInv()
{
  if (!lint) {
    if (cJuli.ActiveInventory == iPilas) {
      cJuli.LoseInventory(iPilas);
    }
    if (cJuli.ActiveInventory == iLente) {
      cJuli.LoseInventory(iLente);
    }
    lint = true;
  }
  else{
    if (cJuli.ActiveInventory == iPilas) {
      cJuli.LoseInventory(iLintDes);
      cJuli.LoseInventory(iPilas);
      cJuli.AddInventory(iLintNew);
    }
    if (cJuli.ActiveInventory == iLente) {
      cJuli.LoseInventory(iLintDes);
      cJuli.LoseInventory(iLente);
      cJuli.AddInventory(iLintNew);
    }
    zoom = true;
    DisplayAtY(20, "Vamos a ver qué descubro con esta linterna. Está bastante guapa. Probablemente me la robe si consigo salir de aquí con vida.");
  }
}

function Button3_OnClick(GUIControl *control, MouseButton button)
{
  gui[5].Visible = false;
  DisplayAtY(20, "Definitivamente, este fue el asesino.");
  culpable = false;
  zoom = false;
  dead = false;
  gui[1].Visible = true;
  paso(2, 1);
  talk("De acuerdo. Prueba finalizada. Encontrarás tu recompensa bajo la mesa de mezclas, en un compartimento oculto.", false);
  endHablar(2, 1);
  endisc = true;
}

function Button4_OnClick(GUIControl *control, MouseButton button)
{
  gui[5].Visible = false;
  DisplayAtY(20, "Definitivamente, este fue el asesino.");
  culpable = true;
  zoom = false;
  dead = false;
  gui[1].Visible = true;
  paso(2, 1);
  talk("De acuerdo. Prueba finalizada. Encontrarás tu recompensa bajo la mesa de mezclas, en un compartimento oculto.", false);
  endHablar(2, 1);
  endisc = true;
}

function Button5_OnClick(GUIControl *control, MouseButton button)
{
  gui[5].Visible = false;
  DisplayAtY(20, "Definitivamente, este fue el asesino.");
  culpable = false;
  zoom = false;
  dead = false;
  gui[1].Visible = true;
  paso(2, 1);
  talk("De acuerdo. Prueba finalizada. Encontrarás tu recompensa bajo la mesa de mezclas, en un compartimento oculto.", false);
  endHablar(2, 1);
  endisc = true;
}

function Button6_OnClick(GUIControl *control, MouseButton button)
{
  gui[5].Visible = false;
  DisplayAtY(20, "Definitivamente, este fue el asesino.");
  culpable = false;
  zoom = false;
  dead = false;
  gui[1].Visible = true;
  paso(2, 1);
  talk("De acuerdo. Prueba finalizada. Encontrarás tu recompensa bajo la mesa de mezclas, en un compartimento oculto.", false);
  endHablar(2, 1);
  endisc = true;
}

function Button7_OnClick(GUIControl *control, MouseButton button)
{
  gui[5].Visible = false;
  DisplayAtY(20, "Definitivamente, este fue el asesino.");
  culpable = false;
  zoom = false;
  dead = false;
  gui[1].Visible = true;
  paso(2, 1);
  talk("De acuerdo. Prueba finalizada. Encontrarás tu recompensa bajo la mesa de mezclas, en un compartimento oculto.", false);
  endHablar(2, 1);
  endisc = true;
}
